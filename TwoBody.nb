(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    286092,       5525]
NotebookOptionsPosition[    283455,       5438]
NotebookOutlinePosition[    283791,       5453]
CellTagsIndexPosition[    283748,       5450]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.663960472866003*^9, 3.663960479955268*^9}, {
  3.663960525002613*^9, 3.663960526480691*^9}}],

Cell[CellGroupData[{

Cell["Defining Functions And Interpolations", "Section",
 CellChangeTimes->{{3.664813534952746*^9, 3.664813539914769*^9}, {
  3.664822189153811*^9, 3.664822192636027*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fSI", "[", 
   RowBox[{
   "\[Beta]_", ",", " ", "q_", ",", " ", "k_", ",", " ", "c_", ",", " ", 
    "m_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"4", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "4"], "-", 
           SuperscriptBox["\[Beta]", "2"]}], ")"}], 
         SuperscriptBox["q", "2"]}], "+", 
        RowBox[{"3", 
         SuperscriptBox["m", "2"]}]}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "4"], "-", 
            SuperscriptBox["\[Beta]", "2"]}], ")"}], 
          SuperscriptBox["q", "2"]}], "+", 
         SuperscriptBox["m", "2"]}], "]"}]], ")"}]}], 
    RowBox[{"ArcTan", "[", 
     FractionBox[
      RowBox[{"2", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["m", "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "4"], "-", 
            SuperscriptBox["\[Beta]", "2"]}], ")"}], 
          SuperscriptBox["q", "2"]}]}], "]"}]}], 
      RowBox[{
       SuperscriptBox["m", "2"], "-", "1", "+", 
       RowBox[{
        FractionBox["1", "4"], 
        SuperscriptBox["q", "2"]}], "-", 
       RowBox[{"2", "\[Beta]", " ", "q", " ", "k", " ", "c"}], " ", "+", " ", 
       
       SuperscriptBox["k", "2"]}]], "]"}]}], " ", "+", " ", 
   RowBox[{"2", "  ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", "q", " ", "k", " ", "c"}], " ", "+", 
        " ", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], 
         SuperscriptBox["q", "2"]}]}], 
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        RowBox[{"2", "\[Beta]", " ", "q", " ", "k", " ", "c"}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], 
         SuperscriptBox["q", "2"]}]}]]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        RowBox[{"2", "\[Beta]", " ", "k", " ", "q", " ", "c"}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], 
         SuperscriptBox["q", "2"]}]}], "]"}]}]], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", 
       SuperscriptBox["m", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["3", "4"], "-", 
         RowBox[{"4", 
          SuperscriptBox["\[Beta]", "2"]}]}], ")"}], 
       SuperscriptBox["q", "2"]}], "-", 
      SuperscriptBox["k", "2"], "+", 
      RowBox[{"2", "\[Beta]", " ", "q", " ", "k", " ", "c"}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "4"], 
           SuperscriptBox["q", "2"]}], "+", 
          SuperscriptBox["m", "2"], "+", "1", "+", 
          SuperscriptBox["k", "2"], "-", 
          RowBox[{"2", "\[Beta]", " ", "q", " ", "k", " ", "c"}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Beta]", " ", "q", " ", "k", " ", "c"}], " ", "-", " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], 
           SuperscriptBox["q", "2"]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        RowBox[{"2", "\[Beta]", " ", "q", " ", "k", " ", "c"}], "+", 
        SuperscriptBox["q", "2"]}]]}], ")"}], "*", 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", 
       RowBox[{"2", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          RowBox[{"2", "\[Beta]", " ", "k", " ", "q", " ", "c"}], " ", "+", 
          " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], 
           SuperscriptBox["q", "2"]}]}], "]"}]}], "+", 
       SuperscriptBox["k", "2"], "-", 
       RowBox[{"2", " ", "\[Beta]", " ", "k", " ", "q", " ", "c"}], " ", "+", 
       
       RowBox[{
        FractionBox["1", "4"], 
        SuperscriptBox["q", "2"]}], "+", 
       SuperscriptBox["m", "2"]}], 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox["k", "2"], "-", 
          RowBox[{"2", "\[Beta]", " ", "k", " ", "q", " ", "c"}], " ", "+", 
          " ", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], 
           SuperscriptBox["q", "2"]}]}], "]"}]}], "+", 
       SuperscriptBox["k", "2"], "-", 
       RowBox[{"2", " ", "\[Beta]", " ", "k", " ", "q", " ", "c"}], " ", "+", 
       
       RowBox[{
        FractionBox["1", "4"], 
        SuperscriptBox["q", "2"]}], "+", 
       SuperscriptBox["m", "2"]}]], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.663706220983513*^9, 3.663706314663516*^9}, 
   3.663706696946184*^9, {3.665169016557426*^9, 3.665169026874884*^9}, {
   3.6936858840561943`*^9, 3.693685912345847*^9}, {3.712534174519211*^9, 
   3.712534187641458*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fSIeff", "[", "k_", "]"}], ":=", " ", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", "Pi"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "*", ".99"}]], 
      RowBox[{"fSI", "[", 
       RowBox[{"\[Beta]", ",", " ", 
        FractionBox["105.658", "238"], ",", " ", "k", ",", " ", "c", ",", 
        FractionBox["138.039", "238"]}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", " ", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", " ", 
       RowBox[{"1", "/", "2"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"c", ",", " ", 
       RowBox[{"-", ".99"}], ",", " ", ".99"}], "}"}], ",", " ", 
     RowBox[{"PrecisionGoal", "\[Rule]", "4"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.663958512334355*^9, 3.663958564372183*^9}, 
   3.663958653092984*^9, {3.663959504211325*^9, 3.663959513256433*^9}, {
   3.663963804777818*^9, 3.663963816316291*^9}, 3.664818017324429*^9, {
   3.665169038506413*^9, 3.665169041451969*^9}, {3.6933203602430468`*^9, 
   3.6933203726467133`*^9}, {3.6933205225435247`*^9, 3.693320524230982*^9}, {
   3.6933205697931843`*^9, 3.693320570385351*^9}, {3.6933206094233637`*^9, 
   3.6933206101226797`*^9}, {3.693751720907604*^9, 3.6937517329544973`*^9}, {
   3.6937536264082537`*^9, 3.693753631099514*^9}, {3.693755718939652*^9, 
   3.693755722033929*^9}, {3.693757349789363*^9, 3.693757354966897*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fSD", "[", 
   RowBox[{
   "\[Beta]_", ",", " ", "q_", ",", " ", "k_", ",", " ", "c_", ",", " ", 
    "m_"}], "]"}], ":=", " ", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      SuperscriptBox["k", "2"], "-", 
      RowBox[{"2", "\[Beta]", " ", "k", " ", "q", " ", "c"}], "+", 
      SuperscriptBox["q", "2"]}], "]"}]], 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        SuperscriptBox["k", "2"], "-", 
        RowBox[{"2", "\[Beta]", " ", "q", " ", "k", " ", "c"}], "+", 
        SuperscriptBox["q", "2"]}], "]"}]], "-", 
     FractionBox[
      RowBox[{"1", "+", 
       SuperscriptBox["m", "2"], "+", 
       SuperscriptBox["k", "2"], "-", 
       RowBox[{"2", " ", "\[Beta]", " ", "k", " ", "q", " ", "c"}], " ", "+", 
       " ", 
       RowBox[{
        FractionBox["1", "4"], 
        SuperscriptBox["q", "2"]}]}], 
      RowBox[{
       SuperscriptBox["k", "2"], "-", 
       RowBox[{"2", "\[Beta]", " ", "q", " ", "k", " ", "c"}], "+", 
       SuperscriptBox["q", "2"]}]]}], ")"}], "*", 
   RowBox[{"Log", "[", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"2", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["k", "2"], "-", 
         RowBox[{"2", "\[Beta]", " ", "k", " ", "q", " ", "c"}], " ", "+", 
         " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], 
          SuperscriptBox["q", "2"]}]}], "]"}]}], "+", 
      SuperscriptBox["k", "2"], "-", 
      RowBox[{"2", " ", "\[Beta]", " ", "k", " ", "q", " ", "c"}], " ", "+", 
      RowBox[{
       FractionBox["1", "4"], 
       SuperscriptBox["q", "2"]}], "+", 
      SuperscriptBox["m", "2"]}], 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox["k", "2"], "-", 
         RowBox[{"2", "\[Beta]", " ", "k", " ", "q", " ", "c"}], " ", "+", 
         " ", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], 
          SuperscriptBox["q", "2"]}]}], "]"}]}], "+", 
      SuperscriptBox["k", "2"], "-", 
      RowBox[{"2", " ", "\[Beta]", " ", "k", " ", "q", " ", "c"}], " ", "+", 
      RowBox[{
       FractionBox["1", "4"], 
       SuperscriptBox["q", "2"]}], "+", 
      SuperscriptBox["m", "2"]}]], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.663707287270831*^9, 3.66370733738523*^9}, {
   3.663707381215442*^9, 3.663707457116147*^9}, {3.665169047461346*^9, 
   3.665169047973666*^9}, 3.6936859330845757`*^9, 3.712534988080069*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fSDeff", "[", "k_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"-", "1"}], 
    RowBox[{"2", "Pi"}]], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "*", ".99"}]], 
      RowBox[{"fSD", "[", 
       RowBox[{"\[Beta]", ",", " ", 
        FractionBox["105.658", "238"], ",", " ", "k", ",", " ", "c", ",", 
        FractionBox["138.039", "238"]}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", " ", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", " ", 
       RowBox[{"1", "/", "2"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"c", ",", " ", 
       RowBox[{"-", ".99"}], ",", " ", ".99"}], "}"}], ",", " ", 
     RowBox[{"PrecisionGoal", "\[Rule]", "4"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.663960261360716*^9, 3.663960300683251*^9}, 
   3.663961954515446*^9, {3.663964192173963*^9, 3.66396419460992*^9}, 
   3.664818021569464*^9, {3.665169051209992*^9, 3.665169053114373*^9}, 
   3.665944171692935*^9, {3.693320390304227*^9, 3.6933204011452227`*^9}, {
   3.6933206227406054`*^9, 3.693320630544895*^9}, {3.693751746327423*^9, 
   3.693751749080248*^9}, {3.6937536388265877`*^9, 3.6937536422347603`*^9}, {
   3.6937557316983423`*^9, 3.693755734974135*^9}, {3.6937573610212793`*^9, 
   3.693757365701644*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AList", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{".43418", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "1"}]]}], ",", 
    RowBox[{".60298", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "1"}]]}], ",", 
    RowBox[{".28950", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]]}], ",", 
    RowBox[{
     RowBox[{"-", ".23522"}], "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "1"}]]}], ",", 
    RowBox[{
     RowBox[{"-", ".79791"}], "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]]}], ",", 
    RowBox[{".23010", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]]}], ",", 
    RowBox[{".10794", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]]}], ",", 
    RowBox[{".12574", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "3"}]]}], ",", 
    RowBox[{
     RowBox[{"-", ".13021"}], "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "3"}]]}], ",", 
    RowBox[{".56563", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "4"}]]}], ",", 
    RowBox[{
     RowBox[{"-", ".18011"}], "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "4"}]]}], ",", 
    RowBox[{".42869", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "5"}]]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.665169922246342*^9, 3.665169951020884*^9}, {
  3.665169988104691*^9, 3.665170144493847*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.043418000000000005`", ",", "0.060298`", ",", "0.002895`", ",", 
   RowBox[{"-", "0.023522`"}], ",", 
   RowBox[{"-", "0.0079791`"}], ",", "0.002301`", ",", 
   "0.0010793999999999999`", ",", "0.00012574`", ",", 
   RowBox[{"-", "0.00013021`"}], ",", "0.000056563`", ",", 
   RowBox[{"-", "0.000018011`"}], ",", "4.2869`*^-6"}], "}"}]], "Output",
 CellChangeTimes->{3.665169953805294*^9, 3.665170197954663*^9, 
  3.665170639002734*^9, 3.665944200752104*^9, 3.693320638963873*^9, 
  3.693685985812243*^9, 3.693751753012095*^9, 3.6937536465646257`*^9, 
  3.693755739349226*^9, 3.693760918364366*^9, 3.712583967940402*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fFourierBessel", "[", "r_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "13"], 
        RowBox[{"Sum", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"AList", "[", 
            RowBox[{"[", "n", "]"}], "]"}], 
           RowBox[{"SphericalBesselJ", "[", 
            RowBox[{"0", ",", 
             FractionBox[
              RowBox[{"n", " ", "Pi", " ", "r"}], "7.0"]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "12"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"r", "\[LessEqual]", "7"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"r", ">", "7"}]}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.665169601963441*^9, 3.665169641098937*^9}, {
   3.665169815300503*^9, 3.665169888721089*^9}, 3.665169981396625*^9, {
   3.665170222661677*^9, 3.665170240475232*^9}, {3.665170336212412*^9, 
   3.665170410025322*^9}, {3.665170461120816*^9, 3.665170462569628*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fourierDensity", "[", "k_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       RowBox[{"(", "197.327", ")"}], 
       RowBox[{"3", "/", "2"}]]], 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4", "Pi"}], ")"}], 
        SuperscriptBox["r", "2"], 
        RowBox[{"Sinc", "[", 
         FractionBox[
          RowBox[{"k", " ", "r"}], "197.327"], "]"}], 
        RowBox[{"Sqrt", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"fFourierBessel", "[", "r", "]"}], "]"}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "0", ",", " ", "7"}], "}"}]}], "]"}]}], ")"}], 
   "2"]}]], "Input",
 CellChangeTimes->{{3.664742719309434*^9, 3.664742783201408*^9}, {
   3.664742956326517*^9, 3.664742972735993*^9}, {3.664743176892277*^9, 
   3.664743178382366*^9}, {3.66474407951483*^9, 3.664744083860907*^9}, {
   3.664744754336505*^9, 3.664744757859926*^9}, {3.664744791889216*^9, 
   3.664744792867528*^9}, {3.664745453628433*^9, 3.664745529696757*^9}, {
   3.664746517787693*^9, 3.664746518094281*^9}, {3.664746697054474*^9, 
   3.66474670204452*^9}, {3.664747513001411*^9, 3.664747525946735*^9}, {
   3.66480994594717*^9, 3.664809950843981*^9}, 3.664809982688584*^9, {
   3.664814185524621*^9, 3.664814188265046*^9}, 3.66517054186935*^9, {
   3.665170685921218*^9, 3.665170692520397*^9}, {3.665170815049144*^9, 
   3.665170822315915*^9}, 3.665170896411941*^9, {3.66517097344324*^9, 
   3.66517097724098*^9}, 3.665172530116539*^9, {3.693320733040959*^9, 
   3.6933207388584967`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fDensityInter", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"fourierDensity", "[", 
         RowBox[{"238", "k"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "1", ",", ".005"}], "}"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6648172546659*^9, 3.664817338366845*^9}, 
   3.664817383980821*^9, {3.664820017102343*^9, 3.66482001743361*^9}, {
   3.664820193287983*^9, 3.664820193774524*^9}, {3.664820328591057*^9, 
   3.6648203532147*^9}, {3.664820494383645*^9, 3.664820496399765*^9}, {
   3.664821268432373*^9, 3.664821269636103*^9}, 3.664821376910386*^9, {
   3.664824351099772*^9, 3.664824351447494*^9}, {3.665173194777863*^9, 
   3.665173196404016*^9}, {3.665173396909538*^9, 3.665173397196975*^9}, 
   3.665173595569909*^9, {3.665174437135594*^9, 3.665174437370207*^9}, {
   3.693320757513196*^9, 3.693320786362176*^9}, {3.693751766190537*^9, 
   3.6937517664503937`*^9}, {3.693753658316677*^9, 3.693753658771014*^9}, {
   3.693755752275462*^9, 3.69375575253011*^9}, {3.693757372047351*^9, 
   3.6937573733199167`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fSIeffInter", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"fSIeff", "[", "k", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "1", ",", ".005"}], "}"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.664817680754065*^9, 3.664817729266853*^9}, {
   3.664818271892887*^9, 3.66481827747464*^9}, {3.664819662604936*^9, 
   3.664819671263555*^9}, 3.664820026645798*^9, 3.664820183725878*^9, 
   3.664820518653077*^9, {3.664824358374762*^9, 3.664824358628718*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.664817809325598*^9, 3.664818063369681*^9, 3.664819690407461*^9, 
   3.664820212176966*^9, {3.664820515117697*^9, 3.664820526249203*^9}, 
   3.664824635451015*^9, 3.664833408274448*^9, 3.664894899603796*^9, 
   3.664916522379861*^9, 3.665175850670169*^9, 3.665945409437325*^9, 
   3.693321867831132*^9, 3.693687139404454*^9, 3.693752951012072*^9, 
   3.693754750816806*^9, 3.6937567734035463`*^9, 3.6937620431409283`*^9, 
   3.712585784338228*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.664817809325598*^9, 3.664818063369681*^9, 3.664819690407461*^9, 
   3.664820212176966*^9, {3.664820515117697*^9, 3.664820526249203*^9}, 
   3.664824635451015*^9, 3.664833408274448*^9, 3.664894899603796*^9, 
   3.664916522379861*^9, 3.665175850670169*^9, 3.665945409437325*^9, 
   3.693321867831132*^9, 3.693687139404454*^9, 3.693752951012072*^9, 
   3.693754750816806*^9, 3.6937567734035463`*^9, 3.6937620431409283`*^9, 
   3.7125857844660873`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.664817809325598*^9, 3.664818063369681*^9, 3.664819690407461*^9, 
   3.664820212176966*^9, {3.664820515117697*^9, 3.664820526249203*^9}, 
   3.664824635451015*^9, 3.664833408274448*^9, 3.664894899603796*^9, 
   3.664916522379861*^9, 3.665175850670169*^9, 3.665945409437325*^9, 
   3.693321867831132*^9, 3.693687139404454*^9, 3.693752951012072*^9, 
   3.693754750816806*^9, 3.6937567734035463`*^9, 3.6937620431409283`*^9, 
   3.712585784565093*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.664817809325598*^9, 3.664818063369681*^9, 3.664819690407461*^9, 
   3.664820212176966*^9, {3.664820515117697*^9, 3.664820526249203*^9}, 
   3.664824635451015*^9, 3.664833408274448*^9, 3.664894899603796*^9, 
   3.664916522379861*^9, 3.665175850670169*^9, 3.665945409437325*^9, 
   3.693321867831132*^9, 3.693687139404454*^9, 3.693752951012072*^9, 
   3.693754750816806*^9, 3.6937567734035463`*^9, 3.6937620431409283`*^9, 
   3.712585784571084*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(2000\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(2.7416171398565363`\\)\[NoBreak] and \
\[NoBreak]\\!\\(0.0003025835946742765`\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.664817809325598*^9, 3.664818063369681*^9, 3.664819690407461*^9, 
   3.664820212176966*^9, {3.664820515117697*^9, 3.664820526249203*^9}, 
   3.664824635451015*^9, 3.664833408274448*^9, 3.664894899603796*^9, 
   3.664916522379861*^9, 3.665175850670169*^9, 3.665945409437325*^9, 
   3.693321867831132*^9, 3.693687139404454*^9, 3.693752951012072*^9, 
   3.693754750816806*^9, 3.6937567734035463`*^9, 3.6937620431409283`*^9, 
   3.7125858004387817`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(2000\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(2.576039080572028`\\)\[NoBreak] and \
\[NoBreak]\\!\\(0.00026379652513558395`\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.664817809325598*^9, 3.664818063369681*^9, 3.664819690407461*^9, 
   3.664820212176966*^9, {3.664820515117697*^9, 3.664820526249203*^9}, 
   3.664824635451015*^9, 3.664833408274448*^9, 3.664894899603796*^9, 
   3.664916522379861*^9, 3.665175850670169*^9, 3.665945409437325*^9, 
   3.693321867831132*^9, 3.693687139404454*^9, 3.693752951012072*^9, 
   3.693754750816806*^9, 3.6937567734035463`*^9, 3.6937620431409283`*^9, 
   3.712585801521435*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(2000\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(2.4270068113185954`\\)\[NoBreak] and \
\[NoBreak]\\!\\(0.00031227934796877006`\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.664817809325598*^9, 3.664818063369681*^9, 3.664819690407461*^9, 
   3.664820212176966*^9, {3.664820515117697*^9, 3.664820526249203*^9}, 
   3.664824635451015*^9, 3.664833408274448*^9, 3.664894899603796*^9, 
   3.664916522379861*^9, 3.665175850670169*^9, 3.665945409437325*^9, 
   3.693321867831132*^9, 3.693687139404454*^9, 3.693752951012072*^9, 
   3.693754750816806*^9, 3.6937567734035463`*^9, 3.6937620431409283`*^9, 
   3.712585802591587*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: eincr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.664817809325598*^9, 3.664818063369681*^9, 3.664819690407461*^9, 
   3.664820212176966*^9, {3.664820515117697*^9, 3.664820526249203*^9}, 
   3.664824635451015*^9, 3.664833408274448*^9, 3.664894899603796*^9, 
   3.664916522379861*^9, 3.665175850670169*^9, 3.665945409437325*^9, 
   3.693321867831132*^9, 3.693687139404454*^9, 3.693752951012072*^9, 
   3.693754750816806*^9, 3.6937567734035463`*^9, 3.6937620431409283`*^9, 
   3.712585802717901*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fSDeffInter", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"fSDeff", "[", "k", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "1", ",", ".005"}], "}"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.664828245289567*^9, 3.664828250314166*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Estimation of Errors and Fitting", "Section",
 CellChangeTimes->{{3.664813593941755*^9, 3.664813598694966*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RMSErrorInterSI", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        FractionBox[
         RowBox[{"Sqrt", "[", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             FractionBox["1", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"2", "Pi"}], ")"}], "3"]], 
             SuperscriptBox[
              RowBox[{"(", "238", ")"}], "3"], "4", "Pi", " ", 
             SuperscriptBox["k", "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"fSIeffInter", "[", "k", "]"}], "-", "x"}], ")"}], 
              "2"], "*", 
             RowBox[{"fDensityInter", "[", "k", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"2", "Pi"}], ")"}], "3"]], 
            SuperscriptBox[
             RowBox[{"(", "238", ")"}], "3"], "4", "Pi", " ", 
            SuperscriptBox["k", "2"], 
            RowBox[{"fSIeffInter", "[", "k", "]"}], "*", 
            RowBox[{"fDensityInter", "[", "k", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", "1"}], "}"}]}], "]"}]]}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"x", ",", ".5", ",", "1.5", ",", ".01"}], "}"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.664818673990337*^9, 3.664818708068567*^9}, {
   3.664821048548489*^9, 3.664821062268443*^9}, {3.664821455604536*^9, 
   3.664821459335907*^9}, 3.66482189227259*^9, {3.664824542491599*^9, 
   3.664824542695523*^9}, {3.664828280503795*^9, 3.664828280709598*^9}, {
   3.665176126063346*^9, 3.665176127702493*^9}, {3.693321216043385*^9, 
   3.693321230348871*^9}, {3.69375177715167*^9, 3.693751780096423*^9}, {
   3.693754760572238*^9, 3.693754764319521*^9}, {3.693755123647008*^9, 
   3.693755125122902*^9}, {3.693755762371943*^9, 3.693755785567471*^9}, {
   3.6937573841206512`*^9, 3.693757388455309*^9}, {3.712586070825634*^9, 
   3.712586075498061*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"RMSErrorInterSI", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", ".5", ",", "1.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664821468834664*^9, 3.66482147777734*^9}, {
   3.664828285490417*^9, 3.66482828562692*^9}, 3.665176131015861*^9, {
   3.693755135482216*^9, 3.693755137418449*^9}, {3.693755788569335*^9, 
   3.6937557927258987`*^9}, {3.712586320790575*^9, 3.712586323302031*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Jhw=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.6000000000000001, 0.06},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.5, 1.5}, {0.06882908993171181, 0.5301055820847684}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.664822041839537*^9, 3.664826213142586*^9, 
  3.664834765585331*^9, 3.664896143116054*^9, 3.665176597069111*^9, 
  3.665946649241852*^9, 3.693322414499853*^9, 3.693687502591586*^9, 
  3.693753377019621*^9, 3.693755098933341*^9, 3.693755284067994*^9, 
  3.693757006009774*^9, 3.693762364191373*^9, 3.712586058918069*^9, 
  3.712586324113415*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"RMSErrorInterSI", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1.0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664821481943847*^9, 3.664821493629508*^9}, {
  3.664828290840953*^9, 3.66482829097106*^9}, {3.665176135386601*^9, 
  3.665176135773922*^9}, {3.693687516217675*^9, 3.6936875178889837`*^9}, {
  3.693755108071926*^9, 3.693755108633683*^9}, {3.712586337342348*^9, 
  3.712586337810058*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.06882903981353547`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.0500893100537727`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.664822046945017*^9, 3.664826214987985*^9, 3.664834769123068*^9, 
   3.664896148094956*^9, 3.665176599446452*^9, 3.665946652961216*^9, 
   3.693322418051078*^9, {3.6936875060244627`*^9, 3.693687520012274*^9}, 
   3.693753378997123*^9, {3.693755100923924*^9, 3.693755110672138*^9}, 
   3.693755287006422*^9, 3.693757008177833*^9, 3.693762368615161*^9, 
   3.712586338579714*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RMSErrorInterSD", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        FractionBox[
         RowBox[{"Sqrt", "[", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             FractionBox["1", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"2", "Pi"}], ")"}], "3"]], 
             SuperscriptBox[
              RowBox[{"(", "238", ")"}], "3"], "4", "Pi", " ", 
             SuperscriptBox["k", "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"fSDeffInter", "[", "k", "]"}], "-", "x"}], ")"}], 
              "2"], "*", 
             RowBox[{"fDensityInter", "[", "k", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"2", "Pi"}], ")"}], "3"]], 
            SuperscriptBox[
             RowBox[{"(", "238", ")"}], "3"], "4", "Pi", " ", 
            SuperscriptBox["k", "2"], 
            RowBox[{"fSDeffInter", "[", "k", "]"}], "*", 
            RowBox[{"fDensityInter", "[", "k", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0", ",", "1"}], "}"}]}], "]"}]]}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"x", ",", ".5", ",", "1.5", ",", ".01"}], "}"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.664818673990337*^9, 3.664818708068567*^9}, {
   3.664821048548489*^9, 3.664821062268443*^9}, {3.664821455604536*^9, 
   3.664821459335907*^9}, 3.66482189227259*^9, {3.664824542491599*^9, 
   3.664824542695523*^9}, {3.664828280503795*^9, 3.664828280709598*^9}, {
   3.664828358757826*^9, 3.664828370542255*^9}, {3.664828434038511*^9, 
   3.664828435991404*^9}, {3.665176951236816*^9, 3.665176957281243*^9}, {
   3.665947004062668*^9, 3.665947006215675*^9}, {3.693321265384363*^9, 
   3.6933212766060534`*^9}, {3.69375179532831*^9, 3.693751798315201*^9}, {
   3.6937547701851387`*^9, 3.6937547752291393`*^9}, {3.693755496971776*^9, 
   3.693755497294283*^9}, {3.693755678430378*^9, 3.693755678692238*^9}, {
   3.69375580869694*^9, 3.69375582439776*^9}, {3.6937573933681917`*^9, 
   3.693757397935513*^9}, {3.712586348862067*^9, 3.712586350400427*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"RMSErrorInterSD", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", ".5", ",", "1.5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664821468834664*^9, 3.66482147777734*^9}, {
   3.664828285490417*^9, 3.66482828562692*^9}, 3.664828376581217*^9, {
   3.664828439895117*^9, 3.664828442073841*^9}, 3.665176984458418*^9, {
   3.665947013119505*^9, 3.665947014758566*^9}, {3.69375516616149*^9, 
   3.693755172186275*^9}, {3.693755675068358*^9, 3.6937556753091707`*^9}, {
   3.693755819880213*^9, 3.6937558203004227`*^9}, {3.712586501920361*^9, 
   3.712586503853619*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.6000000000000001, 0.08},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.5, 1.5}, {0.11235788390111846`, 0.8666040325464189}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.664822041839537*^9, 3.664826213142586*^9, 
  3.664835979189885*^9, 3.664897330390268*^9, 3.665177226098196*^9, 
  3.66594743362664*^9, 3.693322807125988*^9, 3.693687740164864*^9, 
  3.693753585675756*^9, 3.693755624567713*^9, 3.693757299329853*^9, 
  3.693762508133954*^9, 3.712586504446929*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"RMSErrorInterSD", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", ".8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664821481943847*^9, 3.664821493629508*^9}, {
   3.664828290840953*^9, 3.66482829097106*^9}, 3.664828382587477*^9, 
   3.664828446575555*^9, {3.664835986218755*^9, 3.66483598758346*^9}, {
   3.665176989052098*^9, 3.665176989827264*^9}, 3.665947017296148*^9, {
   3.665947446556322*^9, 3.665947448097422*^9}, {3.693687745746696*^9, 
   3.693687746191697*^9}, {3.7125865136520348`*^9, 3.7125865150379753`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.11235775225230746`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.8080222155335582`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.664822046945017*^9, 3.664826214987985*^9, 3.664835989409846*^9, 
   3.66489733263011*^9, 3.665177231131579*^9, {3.665947438016324*^9, 
   3.665947449635115*^9}, 3.693322811312069*^9, 3.693687747947946*^9, 
   3.693753587364217*^9, 3.693755634474153*^9, 3.693757304242731*^9, 
   3.693762510723401*^9, 3.712586515730316*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots", "Section",
 CellChangeTimes->{{3.664813580086035*^9, 3.664813580970699*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "*", "Pi"}], ")"}], "3"]], "4", "Pi", " ", 
    SuperscriptBox["k", "2"], 
    SuperscriptBox[
     RowBox[{"(", "238", ")"}], "3"], 
    RowBox[{"fDensityInter", "[", "k", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "None"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "None"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
      RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Linear Probability Density \\n (Dimensionless)\>\"", ",", "14", 
          ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", " ", 
        "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*OverscriptBox[\(k\), \(_\)]\) (Dimensionless)\>\"", ",", 
          "14", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}], " ", ",", " ", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<P(\!\(\*OverscriptBox[\(k\), \(_\)]\))\>\"", ",", "16", ",", 
         RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664742977400955*^9, 3.66474301736855*^9}, {
   3.664743095471395*^9, 3.664743110136544*^9}, {3.664743187503206*^9, 
   3.664743188021198*^9}, 3.664743265741776*^9, {3.664744094225866*^9, 
   3.66474409921188*^9}, {3.664744800644508*^9, 3.664744805130882*^9}, {
   3.664745610077594*^9, 3.664745648810986*^9}, {3.664745781935402*^9, 
   3.664745790255199*^9}, {3.664746719787834*^9, 3.664746741487645*^9}, {
   3.664746776817472*^9, 3.664746777217859*^9}, 3.664746823617665*^9, 
   3.664746860775056*^9, {3.664747539756676*^9, 3.664747540085457*^9}, {
   3.664749534889871*^9, 3.664749538383513*^9}, {3.664749591105633*^9, 
   3.664749609086668*^9}, 3.664809989542306*^9, {3.664812707277054*^9, 
   3.664812707341148*^9}, {3.664814214675259*^9, 3.664814219626911*^9}, {
   3.664817353089148*^9, 3.66481735732246*^9}, {3.664817652803596*^9, 
   3.664817662715336*^9}, 3.664820369189473*^9, {3.664821158030583*^9, 
   3.664821163589805*^9}, {3.664821330753108*^9, 3.664821342310905*^9}, {
   3.664826319200326*^9, 3.664826323111158*^9}, {3.664826450640548*^9, 
   3.664826451006736*^9}, {3.664826552668717*^9, 3.664826557112665*^9}, 
   3.664826707159158*^9, {3.664827710010591*^9, 3.66482776458652*^9}, {
   3.664827804791744*^9, 3.664827845231621*^9}, {3.664828118195482*^9, 
   3.664828140873578*^9}, {3.664836078043929*^9, 3.66483607936203*^9}, {
   3.664836125518237*^9, 3.664836143467377*^9}, {3.664897356962751*^9, 
   3.664897360827107*^9}, {3.66489748543939*^9, 3.664897489863001*^9}, {
   3.664897574827713*^9, 3.664897639439785*^9}, {3.664897692097098*^9, 
   3.664897758243473*^9}, {3.664897836628427*^9, 3.664897851302778*^9}, {
   3.6937574204278708`*^9, 3.693757425169159*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}}, 
    InsetBox[
     TemplateBox[{
      StyleBox["\"P(\\!\\(\\*OverscriptBox[\\(k\\), \\(_\\)]\\))\"", 16, 
        FontColor -> GrayLevel[0], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Linear Probability Density \\n (Dimensionless)\"", 14, FontColor -> 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"\\!\\(\\*OverscriptBox[\\(k\\), \\(_\\)]\\) (Dimensionless)\"", 14, 
        FontColor -> GrayLevel[0], StripOnInput -> False], TraditionalForm], 
      None}},
   FrameTicks->{{All, None}, {All, None}},
   FrameTicksStyle->Directive[FontSize -> 12, FontColor -> GrayLevel[0]],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{404., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.9999999795918367}, {0, 3}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style[
         "Linear Probability Density \n (Dimensionless)", 14, FontColor -> 
          GrayLevel[0]], None}, {
         Style[
         "\!\(\*OverscriptBox[\(k\), \(_\)]\) (Dimensionless)", 14, FontColor -> 
          GrayLevel[0]], None}}, FrameTicks -> {{All, None}, {All, None}}, 
      FrameTicksStyle -> Directive[FontSize -> 12, FontColor -> GrayLevel[0]],
       GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0., 0.9999999795918367}, {0, 3}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Style[
        "P(\!\(\*OverscriptBox[\(k\), \(_\)]\))", 16, FontColor -> 
         GrayLevel[0]]}, LegendMarkers -> None, LabelStyle -> {}, 
       LegendLayout -> "Column"]], {Right, Top}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.664743073385772*^9, 3.664743170899398*^9, 3.664743253640116*^9, 
   3.664743302141221*^9, 3.664744105227349*^9, 3.664744862301624*^9, {
   3.66474560239927*^9, 3.664745616700651*^9}, {3.664745774803521*^9, 
   3.664745797512301*^9}, 3.664746524824545*^9, {3.664746714210017*^9, 
   3.664746737017661*^9}, 3.66474677057919*^9, 3.664746814867187*^9, {
   3.664746850772772*^9, 3.664746866036408*^9}, {3.664747534599608*^9, 
   3.664747545900464*^9}, 3.664749548706859*^9, {3.664749608477194*^9, 
   3.664749625333212*^9}, 3.664809914825894*^9, {3.664809964137089*^9, 
   3.664810002905123*^9}, {3.664812706152168*^9, 3.664812715909027*^9}, 
   3.664814229080125*^9, 3.66481737848798*^9, 3.664817665490043*^9, 
   3.664817807309728*^9, 3.664820201366832*^9, 3.664820506701018*^9, 
   3.664821168822911*^9, 3.664821286988606*^9, 3.66482134317012*^9, 
   3.664821381798022*^9, 3.664824732704818*^9, 3.664826323643848*^9, 
   3.664826453020216*^9, 3.664826580381961*^9, 3.664826708441563*^9, {
   3.664827714295439*^9, 3.664827765378429*^9}, {3.664827836549615*^9, 
   3.664827846127447*^9}, {3.664828119363195*^9, 3.66482814621912*^9}, 
   3.66483608027154*^9, {3.664836126952041*^9, 3.664836144912128*^9}, {
   3.664897344378565*^9, 3.664897362629652*^9}, 3.664897491387555*^9, 
   3.664897604736431*^9, 3.664897641137311*^9, {3.66489769676973*^9, 
   3.664897732469252*^9}, 3.664897766825695*^9, {3.664897842137777*^9, 
   3.664897852613511*^9}, 3.664916665795909*^9, 3.665177293330007*^9, 
   3.665947461876562*^9, 3.693762574312242*^9, 3.712586576616674*^9, 
   3.712586754754283*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
2c4YNK2O/3up9n/rqv0/eNqrPQ==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"fSIeffInter", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "None"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "None"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
      RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Angle Averaged Value \\n (Dimensionless)\>\"", ",", "14", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", " ", 
        "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*OverscriptBox[\(k\), \(_\)]\) (Dimensionless)\>\"", ",", 
          "14", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}], " ", ",", " ", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*SuperscriptBox[\(f\), \(SI\)]\)(\!\(\*OverscriptBox[\(k\), \
\(_\)]\))\>\"", ",", "16", ",", 
         RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664819941782324*^9, 3.664819957955891*^9}, {
  3.664826492157511*^9, 3.664826492818471*^9}, {3.664826644312384*^9, 
  3.664826665217145*^9}, {3.664827930367461*^9, 3.664827943331906*^9}, {
  3.664836169907685*^9, 3.664836172871542*^9}, {3.66489787286615*^9, 
  3.66489801858663*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}}, InsetBox[
     TemplateBox[{
      StyleBox["\"\\!\\(\\*SuperscriptBox[\\(f\\), \
\\(SI\\)]\\)(\\!\\(\\*OverscriptBox[\\(k\\), \\(_\\)]\\))\"", 16, FontColor -> 
        GrayLevel[0], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Angle Averaged Value \\n (Dimensionless)\"", 14, FontColor -> 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"\\!\\(\\*OverscriptBox[\\(k\\), \\(_\\)]\\) (Dimensionless)\"", 14, 
        FontColor -> GrayLevel[0], StripOnInput -> False], TraditionalForm], 
      None}},
   FrameTicks->{{All, None}, {All, None}},
   FrameTicksStyle->Directive[FontSize -> 12, FontColor -> GrayLevel[0]],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{405., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0, 1}, {0., 1.3465913123628124`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style[
         "Angle Averaged Value \n (Dimensionless)", 14, FontColor -> 
          GrayLevel[0]], None}, {
         Style[
         "\!\(\*OverscriptBox[\(k\), \(_\)]\) (Dimensionless)", 14, FontColor -> 
          GrayLevel[0]], None}}, FrameTicks -> {{All, None}, {All, None}}, 
      FrameTicksStyle -> Directive[FontSize -> 12, FontColor -> GrayLevel[0]],
       GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 1}, {0., 1.3465913123628124`}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Style[
        "\!\(\*SuperscriptBox[\(f\), \(SI\)]\)(\!\(\*OverscriptBox[\(k\), \(_\
\)]\))", 16, FontColor -> GrayLevel[0]]}, LegendMarkers -> None, 
       LabelStyle -> {}, LegendLayout -> "Column"]], {Left, Bottom}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.664819958764301*^9, 3.664820255942426*^9, 3.664820572936801*^9, 
   3.664824735471983*^9, 3.664826498082667*^9, {3.664826650182936*^9, 
   3.664826665983125*^9}, 3.664826710121374*^9, {3.664827937196868*^9, 
   3.664827944747382*^9}, 3.66483617555717*^9, 3.664897901644519*^9, 
   3.664897949488135*^9, {3.664898008215986*^9, 3.664898019724929*^9}, 
   3.664916669151626*^9, 3.665177299204033*^9, 3.665947467638427*^9, 
   3.693762622721035*^9, 
   3.712586591530404*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
5C/hLJkA6kr1f2ss/gdrwDB5\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fSIeffInter", "[", "k", "]"}], ",", " ", "1.05009"}], "}"}], 
   " ", ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.4"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "None"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "None"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
      RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Angle Averaged Value \\n (Dimensionless)\>\"", ",", "14", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", " ", 
        "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*OverscriptBox[\(k\), \(_\)]\) (Dimensionless)\>\"", ",", 
          "14", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}], " ", ",", " ", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SuperscriptBox[\(f\), \
\(SI\)]\)(\!\(\*OverscriptBox[\(k\), \(_\)]\))\>\"", ",", "16", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", " ", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{
           "\"\<f^{SI}_{\\\\textrm{eff}}\>\"", ",", "TeXForm", ",", 
            "HoldForm"}], "]"}], ",", "16", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", " ", "Dashed"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.663709187214362*^9, 3.663709384072638*^9}, {
   3.66370941939442*^9, 3.663709423103779*^9}, {3.663709541290047*^9, 
   3.663709584859896*^9}, {3.66388017643369*^9, 3.663880212677004*^9}, {
   3.663881025219864*^9, 3.663881032918772*^9}, {3.663881103001452*^9, 
   3.663881109000638*^9}, {3.66388116056773*^9, 3.663881170189209*^9}, 
   3.66388263776046*^9, {3.663883904617526*^9, 3.663883922089159*^9}, {
   3.66395767489077*^9, 3.663957706738096*^9}, {3.663958586733227*^9, 
   3.66395859952248*^9}, 3.663958657833409*^9, {3.663959400502124*^9, 
   3.663959405977931*^9}, {3.663960348681298*^9, 3.663960358472217*^9}, {
   3.663963769662733*^9, 3.663963784711478*^9}, {3.664733426226068*^9, 
   3.664733439038801*^9}, {3.66473350298254*^9, 3.664733527261888*^9}, {
   3.664733618091584*^9, 3.664733627233212*^9}, {3.664737747747453*^9, 
   3.664737805782967*^9}, {3.664737844950504*^9, 3.664737845874271*^9}, {
   3.664737893535978*^9, 3.664737894107867*^9}, {3.664737928359619*^9, 
   3.66473792924737*^9}, {3.664738011016669*^9, 3.664738066781381*^9}, {
   3.664738987624535*^9, 3.664739046092257*^9}, 3.664739847305507*^9, {
   3.664739977674204*^9, 3.664739978505148*^9}, {3.664740027956133*^9, 
   3.6647400305558*^9}, {3.664740072856651*^9, 3.664740080327196*^9}, 
   3.664741004286678*^9, {3.66482231652813*^9, 3.664822340683768*^9}, 
   3.664826680854083*^9, {3.664836190603878*^9, 3.66483619818702*^9}, {
   3.664898104181303*^9, 3.664898254640703*^9}, {3.664898295860921*^9, 
   3.664898346452949*^9}, {3.664916841272256*^9, 3.664916951435841*^9}, {
   3.665176778446706*^9, 3.665176787193696*^9}, {3.66517731430902*^9, 
   3.665177315127848*^9}, {3.693762631822241*^9, 3.693762634095755*^9}, {
   3.693762678957014*^9, 3.693762686544388*^9}, {3.712586605488563*^9, 
   3.7125866203755493`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2Z7b81dY++8G+ubG7okuyxR7GTyl5
L9kpOQXO55jiufDDxyVw/vYLRu7ucuvh/IjmO7cOd2+B8/M3FuvO+LITzv80
4doJRsb9cP6Jg8f2n7c5BOdnVnryRr45Aucf5DT6vyb3OJy/bPGRf1Kqp+B8
B7G9i4LXnYHzdY/f2XFM6zycf8Uh+N3Kdxfg/Byu7EtXDS7B+advhO/l67sM
5we7RTx88uQKnG+2oDt8gco1OP/Bv8lXMuqvw/lPPc8vFjt8A87fMPN+5UXF
W3D+0g7mTs2q23D+1+SoV2m778D53C5tQRvF78H5NQJPeR7G3IfzefZpM1z3
fQDn25b5/z38C8Gfs6RnsfKch3B+XKjJWU7vR3D+1qupk/d9Q/Atz2xgejbt
MZyv4Jr2dbLLEzjf1MR04pZnCP79T70nF7c+hfPfGAe2Sho9g/PVXuu+YryM
4B9RKb1U0Pgczu+/cjU5SOUFnP8++MBEpiMI/qZQUWfLwpdw/uKzzXMfCb2C
878fj6kWOoTgP5i4/6tA3ms4/9tFa8kmvjdwfsEUpQOVexB88bNKAk/i3iLi
9+qaPzL/EPxP8Qtz7qx6B+fvT1jfyufzHs7Xdoi1ZV+G4E+X5/76/z+CDwA4
9NYP
       "]]}}, InsetBox[
     TemplateBox[{
      StyleBox["\"\\!\\(\\*SuperscriptBox[\\(f\\), \
\\(SI\\)]\\)(\\!\\(\\*OverscriptBox[\\(k\\), \\(_\\)]\\))\"", 16, FontColor -> 
        GrayLevel[0], StripOnInput -> False],StyleBox[
        TagBox[
         SubsuperscriptBox["f", "eff", "SI"], HoldForm], 16, FontColor -> 
        GrayLevel[0], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Angle Averaged Value \\n (Dimensionless)\"", 14, FontColor -> 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"\\!\\(\\*OverscriptBox[\\(k\\), \\(_\\)]\\) (Dimensionless)\"", 14, 
        FontColor -> GrayLevel[0], StripOnInput -> False], TraditionalForm], 
      None}},
   FrameTicks->{{All, None}, {All, None}},
   FrameTicksStyle->Directive[FontSize -> 12, FontColor -> GrayLevel[0]],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{408., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.9999999795918367}, {0, 1.4}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2Z7b81dY++8G+ubG7okuyxR7GTyl5
L9kpOQXO55jiufDDxyVw/vYLRu7ucuvh/IjmO7cOd2+B8/M3FuvO+LITzv80
4doJRsb9cP6Jg8f2n7c5BOdnVnryRr45Aucf5DT6vyb3OJy/bPGRf1Kqp+B8
B7G9i4LXnYHzdY/f2XFM6zycf8Uh+N3Kdxfg/Byu7EtXDS7B+advhO/l67sM
5we7RTx88uQKnG+2oDt8gco1OP/Bv8lXMuqvw/lPPc8vFjt8A87fMPN+5UXF
W3D+0g7mTs2q23D+1+SoV2m778D53C5tQRvF78H5NQJPeR7G3IfzefZpM1z3
fQDn25b5/z38C8Gfs6RnsfKch3B+XKjJWU7vR3D+1qupk/d9Q/Atz2xgejbt
MZyv4Jr2dbLLEzjf1MR04pZnCP79T70nF7c+hfPfGAe2Sho9g/PVXuu+YryM
4B9RKb1U0Pgczu+/cjU5SOUFnP8++MBEpiMI/qZQUWfLwpdw/uKzzXMfCb2C
878fj6kWOoTgP5i4/6tA3ms4/9tFa8kmvjdwfsEUpQOVexB88bNKAk/i3iLi
9+qaPzL/EPxP8Qtz7qx6B+fvT1jfyufzHs7Xdoi1ZV+G4E+X5/76/z+CDwA4
9NYP
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style[
         "Angle Averaged Value \n (Dimensionless)", 14, FontColor -> 
          GrayLevel[0]], None}, {
         Style[
         "\!\(\*OverscriptBox[\(k\), \(_\)]\) (Dimensionless)", 14, FontColor -> 
          GrayLevel[0]], None}}, FrameTicks -> {{All, None}, {All, None}}, 
      FrameTicksStyle -> Directive[FontSize -> 12, FontColor -> GrayLevel[0]],
       GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0., 0.9999999795918367}, {0, 1.4}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]]}, {
        Style[
        "\!\(\*SuperscriptBox[\(f\), \(SI\)]\)(\!\(\*OverscriptBox[\(k\), \(_\
\)]\))", 16, FontColor -> GrayLevel[0]], 
        Style[
         HoldForm[
         Subscript[$CellContext`f, $CellContext`eff]^$CellContext`SI], 16, 
         FontColor -> GrayLevel[0]]}, LegendMarkers -> None, LabelStyle -> {},
        LegendLayout -> "Column"]], {Left, Bottom}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.664917147315668*^9, {3.665177307988537*^9, 3.665177315846657*^9}, 
   3.665947473086172*^9, 3.6937626359423*^9, {3.693762679765253*^9, 
   3.6937626870785303`*^9}, {3.712586609443563*^9, 
   3.7125866210719223`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
WmcReUqVRrf40SJt0KzD0gV/pKiX7gjlYiAnC92lqNGPtJzLOuUmdi2cgAH/
agCvymLaJDM1bJyroUmvwZi64gjCs4qVVuYdRITI1UM+jHkbr5LL1FxEiLg5
cv5x7qug6AOtViunfTG0J2YkyEE3qbgmJw3pOknFecPtxAo0Uzxkw4pcSayv
Snfr0aEv4hMlzKCkL/RScrS9ipaRKAelhPmSzqC7CA5ffkZ+ulJX/JGeuHgr
hjOQXkpXNBnI8STdI3D9QTzffGTTtOzdpMTMpGPYABaYXkl/27JCERPaiFlY
VPzSMTNLONXqiVkX+fawkhaU7pQgFUbpfAYxBCQ06OoDmtNl2Ru4KFNGQ/MS
IedOSplp2NMCxw9swLTuHqjccD6eFCiiId0EQmIPfZRAbjAZDXJy0aqG8i/w
2o760ZBGc374bARW68ODspXgSZeoUCAZCXHyivM6jvST3H1HY5DXdjYOL/fe
ZDRowL3FivCk621osqHR9t2SMzI8uuiCVEKBpkj3ZhYDrl8x6cyTfZjcLhCf
bY+jQ706txgG8lpsbBdoKJSC3/c24fezEkCKnKN5gbyFvHV3/QBLopyC8WF9
b3h7ezPE6WmJKi62UDONo3aogxY9xuBmljLx0pVST2LTMFzIZKbSxYWWfnIf
M3BdpoxLQTwObVqDNWvWkDeVPdVYs+kQqV5eQ2k0Cxd5WVM0Ah+9fHd9tjAH
UtImGX5V/fCFsUIiMLY5Ll/8pzL15j8h0lC4kXHxthDZRCf+SHazj37UjASI
S9cWmrLTXY57+WqLzKW7qWaL4dM8mGLuMe6a1hQXC8w1cE+nidHgdXg1PXvY
FqZcmyeFjzGJU+AwBUrLvVG8Y4nX4LWV7JDyRYDXVkZcMoJMveLOXxQ0zcnS
kXa+Ic3sCbJi6aU03Zcv5lsP0tYi0qZeVVddRJqWqnRkRfJA0zwX8pAHOSpG
9ZUvgFsP0tK2q8m3zlUTsab5SIo0J8y3MdszX7yXW+k2lDdJY2F007gct81J
dNB13ku2l6gWmlPprkd61TGBDtNi0EroMLAZXK475IT0ltZ84JIal4KIaEvg
1I3IEhVu4KZKE8PBS7RMqR1feSe7jFfHeYk8oXALKSmqmLCHLwjoZeCmSSXz
sYrYJEXL0aKBDGNqkraQbz7i0cwILFuTnmKTcclZ8nFeCuCjJQBpdnoZuDZR
qUl3sUkaaiQyKekfDXyyLOll4Oa/kuBAN7Eh4hapOgk3yvotXUNj4P49Jdyk
+++IW1IGYzL9wsIThW5k4BI8pfacRRQpX6uUjJyfI9pyncem0MvAhXdKTUqB
0JTHSrrvglh4gi3UJe1l4Eo7pSalhCy0Xa172WlMYqZAtYFL5pTak477kmqn
tZpENd3UTSl/6GXgAjmlJu1FFMmjIl1+SGM9+E6cgKKB681KeoxkKVMKVekC
MulWV/4TA1eRKWFlKxJK4l2jc8U07XBIhBq4fUupSelwN8XRS6dZShFq4DIj
pfakaZnsaSljMDFQJtnA9TX6r6IXdIx0wFhSWyRvehm4UEapSQuxYdInUmJf
mlNZjxZQNHB/glJ7arG9hNRsbspLgzg86qXQXueytWcutkd6RgrCJaMwOT1X
aM9AgvOSvifNXmQpkCuKWQvCrw3kmtZPnZoLQEpeWp52+NNAlj9hzFMPNxr1
qyrDlTemgXVWBlsBd7qYBt9AGGL5bit5I7DlupujnBBlc8bYRRSgRvuW9Gx9
DUoRcXquWOAv4by2eBOrXnPXSv5a8SYD5ZYUDc6StcrrlwToNlNCUimTT751
pHRKfd1f8r9Xmf63yuz/AL+7zqA=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"fSDeffInter", "[", "k", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"k", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "None"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", "None"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
      RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Angle Averaged Value \\n (Dimensionless)\>\"", ",", "14", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", " ", 
        "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*OverscriptBox[\(k\), \(_\)]\) (Dimensionless)\>\"", ",", 
          "14", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}], " ", ",", " ", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*SuperscriptBox[\(f\), \(SD\)]\)(\!\(\*OverscriptBox[\(k\), \
\(_\)]\))\>\"", ",", "16", ",", 
         RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.663709617431423*^9, 3.663709713956154*^9}, {
   3.663884821988579*^9, 3.663884870730956*^9}, {3.663960318216185*^9, 
   3.663960320252262*^9}, {3.663967694750909*^9, 3.663967713209763*^9}, {
   3.664734512603091*^9, 3.664734552767347*^9}, {3.664734643858531*^9, 
   3.664734739370073*^9}, {3.664734800050628*^9, 3.664734817843709*^9}, {
   3.664735046773702*^9, 3.664735049575685*^9}, {3.664735153704755*^9, 
   3.664735255847385*^9}, 3.664735299224956*^9, {3.664735342576335*^9, 
   3.664735366093362*^9}, {3.664735514364495*^9, 3.664735536069521*^9}, {
   3.664735586022677*^9, 3.66473559785207*^9}, {3.664735701116678*^9, 
   3.664735841961884*^9}, {3.66473595407594*^9, 3.664735966993093*^9}, {
   3.664735998986082*^9, 3.664736030003026*^9}, {3.664736069240332*^9, 
   3.664736072039201*^9}, {3.664736450458057*^9, 3.664736517405578*^9}, {
   3.664736765694526*^9, 3.66473685031673*^9}, {3.664736911517573*^9, 
   3.664736918348905*^9}, {3.664736979345621*^9, 3.664736993453989*^9}, {
   3.664737077659069*^9, 3.664737168488281*^9}, {3.664737216556505*^9, 
   3.664737305612153*^9}, {3.664737405404378*^9, 3.664737406061241*^9}, {
   3.664737473632804*^9, 3.664737479609822*^9}, {3.664737554086897*^9, 
   3.664737623106637*^9}, {3.664737824498984*^9, 3.664737825282261*^9}, {
   3.664737857352969*^9, 3.66473791520291*^9}, {3.664737961369968*^9, 
   3.664737986163632*^9}, {3.664739876122869*^9, 3.664739887807663*^9}, {
   3.664836243145484*^9, 3.664836248697157*^9}, {3.664836307323293*^9, 
   3.664836308077339*^9}, 3.664836427739008*^9, {3.66489838780612*^9, 
   3.664898500379803*^9}, {3.664916994769211*^9, 3.664917001191108*^9}, {
   3.664917049801095*^9, 3.664917055233276*^9}, {3.665177649662053*^9, 
   3.665177678324054*^9}, {3.665947483048072*^9, 3.665947485416998*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV13k8lF0bB3DRomjxKqVEhFYtosdSfopEtDFZSgrJlkplK5KklEiRJMle
pKIk2VNP1jIrRrYZsszcGaQkxXuev+bz/czMOfe57nNd1znKTqcsXcTFxMTW
TxET++9zl0sfo6L/gMHV194FWzt56H1u7dQhr4Wr4i9nGBHLSXGiXskbY69V
bIk18duyiyf81Peg567NQ3/idbrzMx7K00Ar1DvzhFhMtj9mUskOSU8CJXqI
GVTpZUd1B9TR7OU38njY71xT6BjnCH72osDrxHr0Tbl35I+hL37w+wDx8q1J
j98nHkeP9HIzRz4P0tmSj0aU3NE5MmDUSTwidzZOLc0T7QYxOZ5dPLSFtkVa
q59ET/Mec4luHpx/pVW+p52GWN7RvkzipnV2BvZx3tjweoaF9VceKh68146U
P4ehsXnhTT08aDH989QO+eCW3NDgk14esiTXaZQl+uLIQqdtYX083PGJVxUp
BeBZ0PDbwwIepufsTr7meB665bfO2Al5OM8XV1iWdgEyD99uOkKR+fd6ye5X
v4jSr88Hrw3w0BymcqvfNRjJa38FZot4UG/3nPaOdgl9VTWajYM8JMxXDrGL
C8G/r6ZsMf3OQ2hIhP8N+Stwc898Gv2LhzKF4wXWRVfgFfqDNjLGw683hiMq
h8KQvFvTyH6chxMDP04VJ16FHCdFefsED7RDR10ppeuYkNRTc57Kh7q2tvUe
9SjQa+0MumX4OEqfG7u4Kgo9mQqjL2T5eOApYPS43oJEr0xk0AI+JBkNmeW0
aGTouZ1eLc9H4IwwFdu427A6eU2tbhkfx86J5K/LxyL7b1bDyo18bJK4c/7l
6Vg8FPRVBW3iQ/yO1pcvVbHwOR800qrNx6MXAYnrfO+irT2+MlePjxaBhBKb
GQep8X3LnxjzsddxkarSzfswlC9vq7DjQ2/PtnWvJ5JQJ/HYaOIaeZ62rqj2
A49QGfDMRD6CjybPq6IZzx7B22UmUzeKj6IPLrbPNJKxmZfVciOWD1t+trxY
azLEtvUqu6XwcWepdmKGTipmdc043VpMxos1SxkcSofnQ8Mgze98jOvwxlMW
Z6CYs9Qo+icfA23+1lZGGRjvSIwbGuODteKJVEFsBmL8xCvKxLqQVDzd98I/
mZCc93vO5Tld0Op6v2t60GOIpVh6pK3uwlFNg5ElktkYebT9jqxLF97QNXfu
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
       "]]}}, 
    InsetBox[
     TemplateBox[{
      StyleBox["\"\\!\\(\\*SuperscriptBox[\\(f\\), \
\\(SD\\)]\\)(\\!\\(\\*OverscriptBox[\\(k\\), \\(_\\)]\\))\"", 16, FontColor -> 
        GrayLevel[0], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0.38},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Angle Averaged Value \\n (Dimensionless)\"", 14, FontColor -> 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"\\!\\(\\*OverscriptBox[\\(k\\), \\(_\\)]\\) (Dimensionless)\"", 14, 
        FontColor -> GrayLevel[0], StripOnInput -> False], TraditionalForm], 
      None}},
   FrameTicks->{{All, None}, {All, None}},
   FrameTicksStyle->Directive[FontSize -> 12, FontColor -> GrayLevel[0]],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{412., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0, 1}, {0.39251403567599336`, 0.8981159434577227}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwV13k8lF0bB3DRomjxKqVEhFYtosdSfopEtDFZSgrJlkplK5KklEiRJMle
pKIk2VNP1jIrRrYZsszcGaQkxXuev+bz/czMOfe57nNd1znKTqcsXcTFxMTW
TxET++9zl0sfo6L/gMHV194FWzt56H1u7dQhr4Wr4i9nGBHLSXGiXskbY69V
bIk18duyiyf81Peg567NQ3/idbrzMx7K00Ar1DvzhFhMtj9mUskOSU8CJXqI
GVTpZUd1B9TR7OU38njY71xT6BjnCH72osDrxHr0Tbl35I+hL37w+wDx8q1J
j98nHkeP9HIzRz4P0tmSj0aU3NE5MmDUSTwidzZOLc0T7QYxOZ5dPLSFtkVa
q59ET/Mec4luHpx/pVW+p52GWN7RvkzipnV2BvZx3tjweoaF9VceKh68146U
P4ehsXnhTT08aDH989QO+eCW3NDgk14esiTXaZQl+uLIQqdtYX083PGJVxUp
BeBZ0PDbwwIepufsTr7meB665bfO2Al5OM8XV1iWdgEyD99uOkKR+fd6ye5X
v4jSr88Hrw3w0BymcqvfNRjJa38FZot4UG/3nPaOdgl9VTWajYM8JMxXDrGL
C8G/r6ZsMf3OQ2hIhP8N+Stwc898Gv2LhzKF4wXWRVfgFfqDNjLGw683hiMq
h8KQvFvTyH6chxMDP04VJ16FHCdFefsED7RDR10ppeuYkNRTc57Kh7q2tvUe
9SjQa+0MumX4OEqfG7u4Kgo9mQqjL2T5eOApYPS43oJEr0xk0AI+JBkNmeW0
aGTouZ1eLc9H4IwwFdu427A6eU2tbhkfx86J5K/LxyL7b1bDyo18bJK4c/7l
6Vg8FPRVBW3iQ/yO1pcvVbHwOR800qrNx6MXAYnrfO+irT2+MlePjxaBhBKb
GQep8X3LnxjzsddxkarSzfswlC9vq7DjQ2/PtnWvJ5JQJ/HYaOIaeZ62rqj2
A49QGfDMRD6CjybPq6IZzx7B22UmUzeKj6IPLrbPNJKxmZfVciOWD1t+trxY
azLEtvUqu6XwcWepdmKGTipmdc043VpMxos1SxkcSofnQ8Mgze98jOvwxlMW
Z6CYs9Qo+icfA23+1lZGGRjvSIwbGuODteKJVEFsBmL8xCvKxLqQVDzd98I/
mZCc93vO5Tld0Op6v2t60GOIpVh6pK3uwlFNg5ElktkYebT9jqxLF97QNXfu
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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0.38}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         Style[
         "Angle Averaged Value \n (Dimensionless)", 14, FontColor -> 
          GrayLevel[0]], None}, {
         Style[
         "\!\(\*OverscriptBox[\(k\), \(_\)]\) (Dimensionless)", 14, FontColor -> 
          GrayLevel[0]], None}}, FrameTicks -> {{All, None}, {All, None}}, 
      FrameTicksStyle -> Directive[FontSize -> 12, FontColor -> GrayLevel[0]],
       GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 1}, {0.39251403567599336`, 0.8981159434577227}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Style[
        "\!\(\*SuperscriptBox[\(f\), \(SD\)]\)(\!\(\*OverscriptBox[\(k\), \(_\
\)]\))", 16, FontColor -> GrayLevel[0]]}, LegendMarkers -> None, 
       LabelStyle -> {}, LegendLayout -> "Column"]], {Left, Bottom}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.664737149981572*^9, 3.664737173138996*^9}, {
   3.664737221293642*^9, 3.664737311316793*^9}, 3.664737411016659*^9, 
   3.664737628904099*^9, 3.664737829725382*^9, {3.664737863460057*^9, 
   3.66473791945328*^9}, {3.664737966624431*^9, 3.664737990821682*^9}, {
   3.664739880341271*^9, 3.664739892793303*^9}, 3.664836253922825*^9, 
   3.66483630905327*^9, 3.664836429761949*^9, 3.664898501751235*^9, {
   3.664916996345297*^9, 3.664917001790612*^9}, 3.664917057341534*^9, {
   3.665177651225643*^9, 3.665177679473534*^9}, 3.665947486922442*^9, 
   3.693762707100943*^9, 3.7125866341660967`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fSDeffInter", "[", "k", "]"}], ",", ".808022"}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"k", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.4"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "None"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "None"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
      RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Angle Averaged Value \\n (Dimensionless)\>\"", ",", "14", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", " ", 
        "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*OverscriptBox[\(k\), \(_\)]\) (Dimensionless)\>\"", ",", 
          "14", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}], " ", ",", " ", 
   RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SuperscriptBox[\(f\), \
\(SD\)]\)(\!\(\*OverscriptBox[\(k\), \(_\)]\))\>\"", ",", "16", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{
           "\"\<f^{SD}_{\\\\textrm{eff}}\>\"", ",", "TeXForm", ",", 
            "HoldForm"}], "]"}], ",", "16", ",", 
          RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", " ", "Dashed"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664836296964382*^9, 3.664836350132393*^9}, {
  3.66483638747922*^9, 3.664836414550048*^9}, {3.664898531876204*^9, 
  3.66489864778921*^9}, {3.664917021337707*^9, 3.664917030356427*^9}, {
  3.66491707078268*^9, 3.664917097466961*^9}, {3.665177687237756*^9, 
  3.665177695800508*^9}, {3.665947497702432*^9, 3.6659475181607*^9}, {
  3.693762716152121*^9, 3.693762727971929*^9}, {3.712586643886327*^9, 
  3.712586663493198*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJwV13k8lF0bB3DRomjxKqVEhFYtosdSfopEtDFZSgrJlkplK5KklEiRJMle
pKIk2VNP1jIrRrYZsszcGaQkxXuev+bz/czMOfe57nNd1znKTqcsXcTFxMTW
TxET++9zl0sfo6L/gMHV194FWzt56H1u7dQhr4Wr4i9nGBHLSXGiXskbY69V
bIk18duyiyf81Peg567NQ3/idbrzMx7K00Ar1DvzhFhMtj9mUskOSU8CJXqI
GVTpZUd1B9TR7OU38njY71xT6BjnCH72osDrxHr0Tbl35I+hL37w+wDx8q1J
j98nHkeP9HIzRz4P0tmSj0aU3NE5MmDUSTwidzZOLc0T7QYxOZ5dPLSFtkVa
q59ET/Mec4luHpx/pVW+p52GWN7RvkzipnV2BvZx3tjweoaF9VceKh68146U
P4ehsXnhTT08aDH989QO+eCW3NDgk14esiTXaZQl+uLIQqdtYX083PGJVxUp
BeBZ0PDbwwIepufsTr7meB665bfO2Al5OM8XV1iWdgEyD99uOkKR+fd6ye5X
v4jSr88Hrw3w0BymcqvfNRjJa38FZot4UG/3nPaOdgl9VTWajYM8JMxXDrGL
C8G/r6ZsMf3OQ2hIhP8N+Stwc898Gv2LhzKF4wXWRVfgFfqDNjLGw683hiMq
h8KQvFvTyH6chxMDP04VJ16FHCdFefsED7RDR10ppeuYkNRTc57Kh7q2tvUe
9SjQa+0MumX4OEqfG7u4Kgo9mQqjL2T5eOApYPS43oJEr0xk0AI+JBkNmeW0
aGTouZ1eLc9H4IwwFdu427A6eU2tbhkfx86J5K/LxyL7b1bDyo18bJK4c/7l
6Vg8FPRVBW3iQ/yO1pcvVbHwOR800qrNx6MXAYnrfO+irT2+MlePjxaBhBKb
GQep8X3LnxjzsddxkarSzfswlC9vq7DjQ2/PtnWvJ5JQJ/HYaOIaeZ62rqj2
A49QGfDMRD6CjybPq6IZzx7B22UmUzeKj6IPLrbPNJKxmZfVciOWD1t+trxY
azLEtvUqu6XwcWepdmKGTipmdc043VpMxos1SxkcSofnQ8Mgze98jOvwxlMW
Z6CYs9Qo+icfA23+1lZGGRjvSIwbGuODteKJVEFsBmL8xCvKxLqQVDzd98I/
mZCc93vO5Tld0Op6v2t60GOIpVh6pK3uwlFNg5ElktkYebT9jqxLF97QNXfu
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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2ZlF8XwJuv7Rvbuyu6JJssYfxU0re
S3ZKToHzOaZ4LvzwcQmcv/2Ckbu73Ho4P6L5zq3D3Vvg/PyNxbozvuyE8z9N
uHaCkXE/nH/i4LH9520OwfmZlZ68kW+OwPkHOY3+r8k9DucvW3zkn5TqKTjf
QWzvouB1Z+B83eN3dhzTOg/nX3EIfrfy3QU4P4cr+9JVg0tw/ukb4Xv5+i7D
+cFuEQ+fPLkC55st6A5foHINzn/wb/KVjPrrcP5Tz/OLxQ7fgPM3zLxfeVHx
Fpy/tIO5U7PqNpz/NTnqVdruO3A+t0tb0Ebxe3B+jcBTnocx9+F8nn3aDNd9
H8D5tmX+fw//QvDnLOlZrDznIZwfF2pyltP7EZy/9Wrq5H3fEHzLMxuYnk17
DOcruKZ9nezyBM43NTGduOUZgn//U+/Jxa1P4fw3xoGtkkbP4Hy117qvGC8j
+EdUSi8VND6H8/uvXE0OUnkB578PPjCR6QiCvylU1Nmy8CWcv/hs89xHQq/g
/O/HY6qFDiH4Dybu/yqQ9xrO/3bRWrKJ7w2cXzBF6UDlHgRf/KySwJO4t4j4
vbrmj8w/BP9T/MKcO6vewfn7E9a38vm8h/O1HWJt2Zch+NPlub/+/4/gAwDM
hqaH
       "]]}}, InsetBox[
     TemplateBox[{
      StyleBox["\"\\!\\(\\*SuperscriptBox[\\(f\\), \
\\(SD\\)]\\)(\\!\\(\\*OverscriptBox[\\(k\\), \\(_\\)]\\))\"", 16, FontColor -> 
        GrayLevel[0], StripOnInput -> False],StyleBox[
        TagBox[
         SubsuperscriptBox["f", "eff", "SD"], HoldForm], 16, FontColor -> 
        GrayLevel[0], StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       StyleBox[
       "\"Angle Averaged Value \\n (Dimensionless)\"", 14, FontColor -> 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
      FormBox[
       StyleBox[
       "\"\\!\\(\\*OverscriptBox[\\(k\\), \\(_\\)]\\) (Dimensionless)\"", 14, 
        FontColor -> GrayLevel[0], StripOnInput -> False], TraditionalForm], 
      None}},
   FrameTicks->{{All, None}, {All, None}},
   FrameTicksStyle->Directive[FontSize -> 12, FontColor -> GrayLevel[0]],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->{417., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{0., 0.9999999795918367}, {0, 1.4}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Line[CompressedData["
1:eJwV13k8lF0bB3DRomjxKqVEhFYtosdSfopEtDFZSgrJlkplK5KklEiRJMle
pKIk2VNP1jIrRrYZsszcGaQkxXuev+bz/czMOfe57nNd1znKTqcsXcTFxMTW
TxET++9zl0sfo6L/gMHV194FWzt56H1u7dQhr4Wr4i9nGBHLSXGiXskbY69V
bIk18duyiyf81Peg567NQ3/idbrzMx7K00Ar1DvzhFhMtj9mUskOSU8CJXqI
GVTpZUd1B9TR7OU38njY71xT6BjnCH72osDrxHr0Tbl35I+hL37w+wDx8q1J
j98nHkeP9HIzRz4P0tmSj0aU3NE5MmDUSTwidzZOLc0T7QYxOZ5dPLSFtkVa
q59ET/Mec4luHpx/pVW+p52GWN7RvkzipnV2BvZx3tjweoaF9VceKh68146U
P4ehsXnhTT08aDH989QO+eCW3NDgk14esiTXaZQl+uLIQqdtYX083PGJVxUp
BeBZ0PDbwwIepufsTr7meB665bfO2Al5OM8XV1iWdgEyD99uOkKR+fd6ye5X
v4jSr88Hrw3w0BymcqvfNRjJa38FZot4UG/3nPaOdgl9VTWajYM8JMxXDrGL
C8G/r6ZsMf3OQ2hIhP8N+Stwc898Gv2LhzKF4wXWRVfgFfqDNjLGw683hiMq
h8KQvFvTyH6chxMDP04VJ16FHCdFefsED7RDR10ppeuYkNRTc57Kh7q2tvUe
9SjQa+0MumX4OEqfG7u4Kgo9mQqjL2T5eOApYPS43oJEr0xk0AI+JBkNmeW0
aGTouZ1eLc9H4IwwFdu427A6eU2tbhkfx86J5K/LxyL7b1bDyo18bJK4c/7l
6Vg8FPRVBW3iQ/yO1pcvVbHwOR800qrNx6MXAYnrfO+irT2+MlePjxaBhBKb
GQep8X3LnxjzsddxkarSzfswlC9vq7DjQ2/PtnWvJ5JQJ/HYaOIaeZ62rqj2
A49QGfDMRD6CjybPq6IZzx7B22UmUzeKj6IPLrbPNJKxmZfVciOWD1t+trxY
azLEtvUqu6XwcWepdmKGTipmdc043VpMxos1SxkcSofnQ8Mgze98jOvwxlMW
Z6CYs9Qo+icfA23+1lZGGRjvSIwbGuODteKJVEFsBmL8xCvKxLqQVDzd98I/
mZCc93vO5Tld0Op6v2t60GOIpVh6pK3uwlFNg5ElktkYebT9jqxLF97QNXfu
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        Line[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2ZlF8XwJuv7Rvbuyu6JJssYfxU0re
S3ZKToHzOaZ4LvzwcQmcv/2Ckbu73Ho4P6L5zq3D3Vvg/PyNxbozvuyE8z9N
uHaCkXE/nH/i4LH9520OwfmZlZ68kW+OwPkHOY3+r8k9DucvW3zkn5TqKTjf
QWzvouB1Z+B83eN3dhzTOg/nX3EIfrfy3QU4P4cr+9JVg0tw/ukb4Xv5+i7D
+cFuEQ+fPLkC55st6A5foHINzn/wb/KVjPrrcP5Tz/OLxQ7fgPM3zLxfeVHx
Fpy/tIO5U7PqNpz/NTnqVdruO3A+t0tb0Ebxe3B+jcBTnocx9+F8nn3aDNd9
H8D5tmX+fw//QvDnLOlZrDznIZwfF2pyltP7EZy/9Wrq5H3fEHzLMxuYnk17
DOcruKZ9nezyBM43NTGduOUZgn//U+/Jxa1P4fw3xoGtkkbP4Hy117qvGC8j
+EdUSi8VND6H8/uvXE0OUnkB578PPjCR6QiCvylU1Nmy8CWcv/hs89xHQq/g
/O/HY6qFDiH4Dybu/yqQ9xrO/3bRWrKJ7w2cXzBF6UDlHgRf/KySwJO4t4j4
vbrmj8w/BP9T/MKcO6vewfn7E9a38vm8h/O1HWJt2Zch+NPlub/+/4/gAwDM
hqaH
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         Style[
         "Angle Averaged Value \n (Dimensionless)", 14, FontColor -> 
          GrayLevel[0]], None}, {
         Style[
         "\!\(\*OverscriptBox[\(k\), \(_\)]\) (Dimensionless)", 14, FontColor -> 
          GrayLevel[0]], None}}, FrameTicks -> {{All, None}, {All, None}}, 
      FrameTicksStyle -> Directive[FontSize -> 12, FontColor -> GrayLevel[0]],
       GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None}, 
      PlotRange -> {{0., 0.9999999795918367}, {0, 1.4}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]]}, {
        Style[
        "\!\(\*SuperscriptBox[\(f\), \(SD\)]\)(\!\(\*OverscriptBox[\(k\), \(_\
\)]\))", 16, FontColor -> GrayLevel[0]], 
        Style[
         HoldForm[
         Subscript[$CellContext`f, $CellContext`eff]^$CellContext`SD], 16, 
         FontColor -> GrayLevel[0]]}, LegendMarkers -> None, LabelStyle -> {},
        LegendLayout -> "Column"]], {Left, Bottom}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.664917197543256*^9, {3.66517769062238*^9, 3.66517769688546*^9}, {
   3.665947505105307*^9, 3.665947519028267*^9}, 3.693762729092976*^9, {
   3.712586650637865*^9, 
   3.7125866641279*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
c/mdVUXfQKH/JP97g/K/VeX+DzNGa6A=\
\>"]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1301, 716},
WindowMargins->{{-10, Automatic}, {Automatic, -10}},
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 6, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 167, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[750, 27, 171, 2, 65, "Section"],
Cell[924, 31, 5032, 148, 241, "Input"],
Cell[5959, 181, 1474, 32, 56, "Input"],
Cell[7436, 215, 2545, 70, 160, "Input"],
Cell[9984, 287, 1364, 32, 56, "Input"],
Cell[CellGroupData[{
Cell[11373, 323, 1369, 45, 62, "Input"],
Cell[12745, 370, 660, 11, 60, "Output"]
}, Open  ]],
Cell[13420, 384, 1085, 28, 56, "Input"],
Cell[14508, 414, 1658, 37, 63, "Input"],
Cell[16169, 453, 1210, 24, 32, "Input"],
Cell[CellGroupData[{
Cell[17404, 481, 646, 15, 32, "Input"],
Cell[18053, 498, 1007, 18, 41, "Message"],
Cell[19063, 518, 1009, 18, 41, "Message"],
Cell[20075, 538, 1007, 18, 41, "Message"],
Cell[21085, 558, 964, 18, 23, "Message"],
Cell[22052, 578, 1554, 26, 95, "Message"],
Cell[23609, 606, 1552, 26, 95, "Message"],
Cell[25164, 634, 1553, 26, 95, "Message"],
Cell[26720, 662, 963, 18, 23, "Message"]
}, Open  ]],
Cell[27698, 683, 431, 12, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28166, 700, 117, 1, 65, "Section"],
Cell[28286, 703, 2304, 55, 150, "Input"],
Cell[CellGroupData[{
Cell[30615, 762, 469, 9, 32, "Input"],
Cell[31087, 773, 5837, 107, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36961, 885, 490, 10, 32, "Input"],
Cell[37454, 897, 568, 12, 32, "Output"]
}, Open  ]],
Cell[38037, 912, 2500, 57, 150, "Input"],
Cell[CellGroupData[{
Cell[40562, 973, 642, 12, 32, "Input"],
Cell[41207, 987, 5842, 106, 252, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47086, 1098, 610, 11, 32, "Input"],
Cell[47699, 1111, 515, 11, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48263, 1128, 90, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[48378, 1133, 3817, 83, 176, "Input"],
Cell[52198, 1218, 50027, 871, 272, 29912, 543, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102262, 2094, 2101, 53, 154, "Input"],
Cell[104366, 2149, 47202, 831, 270, 28935, 530, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151605, 2985, 4247, 91, 207, "Input"],
Cell[155855, 3078, 54135, 967, 275, 34899, 650, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210027, 4050, 3611, 73, 154, "Input"],
Cell[213641, 4125, 21545, 407, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235223, 4537, 2850, 72, 207, "Input"],
Cell[238076, 4611, 45351, 823, 280, 26871, 518, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
